{"version":3,"sources":["containers/EnterBudget/EnterBudget.js","containers/AdjustBudget/AdjustBudget.js","containers/AddExpense/AddExpense.js","components/Header/Header.js","components/Expense/Expense.js","components/Expenses/Expenses.js","components/Footer/Footer.js","containers/App.js","serviceWorker.js","index.js"],"names":["EnterBudget","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleAddBudget","bind","assertThisInitialized","state","error","undefined","e","preventDefault","budget","target","elements","value","setState","react_default","a","createElement","className","onSubmit","type","name","min","placeholder","class","React","Component","AdjustBudget","handleAdjustBudget","amount","adjustment","AddExpense","handleAddExpense","trim","cost","maxLength","Header","danger","totalBudget","AdjustBudget_AdjustBudget","EnterBudget_EnterBudget","AddExpense_AddExpense_AddExpense","onClick","handleResetBudget","totalExpenses","Expense","expenseName","expenseCost","handleDeleteExpense","handleCompleteExpense","Expenses","id","expenseList","length","handleClearAllExpenses","handleCompleteAllExpenses","map","expense","components_Expense_Expense","key","Footer","href","App","console","log","json","localStorage","getItem","JSON","parse","stringBudget","parseInt","stringTotalExpenses","prevProps","prevState","stringify","setItem","_this2","filteredList","filter","exp","concat","addBack","removeItem","st","expenseToRemove","_this3","components_Header_Header","components_Expenses_Expenses","handleEditExpenseModal","components_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea108dee.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class EnterBudget extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleAddBudget = this.handleAddBudget.bind(this)\n    this.state = {\n      error: undefined\n    }\n  }\n  handleAddBudget(e) {\n    e.preventDefault();\n    const budget = e.target.elements.budget.value\n    const error = this.props.handleAddBudget(budget);\n    this.setState(() => ({ error }));\n    e.target.elements.budget.value = ''\n  }\n  render() {\n    return (\n      <div className=\"enter-budget\">\n        <form onSubmit={this.handleAddBudget}>\n          <label>Enter Budget</label>\n          <input className=\"budget-input\" type=\"number\" name=\"budget\" min=\"1\" placeholder=\"$\" />\n          <button className=\"btn btn-dark\">Submit</button>\n        </form>\n        {this.state.error && <p class=\"error-msg text-center\">{this.state.error}</p>}\n      </div>\n    );\n  }\n}","import React from 'react';\n\nexport default class AdjustBudget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleAdjustBudget = this.handleAdjustBudget.bind(this);\n    this.state = {\n      error: undefined\n    };\n  }\n  handleAdjustBudget(e) {\n    e.preventDefault();\n    const amount = e.target.elements.adjustment.value;\n    const error = this.props.handleAdjustBudget(amount);\n    this.setState(() => ({ error }));\n    e.target.elements.adjustment.value = ''\n  }\n  render() {\n    return (\n      <div className=\"adjustBudget\">\n        <form onSubmit={this.handleAdjustBudget}>\n          <label>Adjust Budget (+/-)</label>\n          <input type=\"number\" name=\"adjustment\" placeholder=\"ex. 45 or -45\" />\n          <button className=\"btn btn-dark\">Submit</button>\n        </form>\n        {this.state.error && <p class=\"error-msg text-center\">{this.state.error}</p>}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './AddExpense.css';\n\nexport default class AddExpense extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleAddExpense = this.handleAddExpense.bind(this)\n    this.state = {\n      error: undefined\n    };\n  }\n  handleAddExpense(e) {\n    e.preventDefault();\n    const name = e.target.elements.name.value.trim();\n    const cost = e.target.elements.cost.value;\n    const error = this.props.handleAddExpense({ name, cost });\n    this.setState(() => ({ error }));\n\n    if (!error) {\n      e.target.elements.name.value = ''\n      e.target.elements.cost.value = ''\n    }\n  }\n  render() {\n    return (\n      <div className=\"add-expense\">\n        <form onSubmit={this.handleAddExpense}>\n          <label>Add an Expense</label>\n          <input type=\"text\" name=\"name\" placeholder=\"Expense Name\" maxLength=\"30\" />\n          <input className=\"cost-input\" type=\"number\" name=\"cost\" min=\"1\" placeholder=\"$\" />\n          <button className=\"btn btn-dark\">Submit</button>\n        </form>\n        {this.state.error && <p class=\"error-msg text-center\">{this.state.error}</p>}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport EnterBudget from '../../containers/EnterBudget/EnterBudget';\nimport AdjustBudget from '../../containers/AdjustBudget/AdjustBudget';\nimport AddExpense from '../../containers/AddExpense/AddExpense';\nimport './Header.css';\n\nconst Header = (props) => {\n  // make budget text red if budget is negative\n  const danger = props.totalBudget < 0 ? \"danger\" : \"\"\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"header-left\">\n          {\n            (!props.totalBudget) ?\n              <EnterBudget\n                handleAddBudget={props.handleAddBudget}\n                totalBudget={props.totalBudget}\n              />\n              :\n              <AdjustBudget\n                handleAdjustBudget={props.handleAdjustBudget}\n              />\n          }\n          <AddExpense\n            handleAddExpense={props.handleAddExpense}\n          />\n        </div>\n        <div className=\"header-right\">\n          <div className=\"budget-display\">\n            <h1>Budget: $<span className={danger}>{props.totalBudget || \"0\"}</span></h1>\n            {\n              props.totalBudget !== undefined && <button className=\"btn btn-danger reset-budget-btn\" onClick={(e => {\n                props.handleResetBudget();\n              })} >Clear Budget</button>\n            }\n          </div>\n          <h2>Total Expenses: ${props.totalExpenses}</h2>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport './Expense.css';\n\nconst Expense = (props) => {\n  return (\n    <tr>\n      <td className=\"expense-name\">{props.expenseName}</td>\n      <td className=\"expense-cost\">${props.expenseCost}</td>\n      <td className=\"expense-remove-btn\">\n        <button className=\"btn btn-danger\" onClick={(e) => {\n          props.handleDeleteExpense({ name: props.expenseName, cost: props.expenseCost })\n        }}>Remove and put $ back</button>\n      </td>\n      <td className=\"expense-remove-btn\">\n        <button className=\"btn btn-danger\" onClick={(e) => {\n          props.handleCompleteExpense({ name: props.expenseName, cost: props.expenseCost })\n        }}>Remove</button>\n      </td>\n    </tr>\n  );\n};\n\nexport default Expense;","import React from 'react';\nimport Expense from '../Expense/Expense';\nimport './Expenses.css';\n\nconst Expenses = (props) => {\n  return (\n    <section id=\"expenses\" className=\"container\">\n      <h2 className=\" text-center text-muted\">Expenses</h2>\n      {props.expenseList.length > 0 &&\n        <div className=\"clear-all-expenses-btns\">\n          <button className=\"complete-all-btn btn btn-danger\" onClick={props.handleClearAllExpenses}>Clear All & Put $ Back</button>\n          <button className=\"clear-all-btn btn btn-danger\" onClick={(e) => {\n          props.handleCompleteAllExpenses();\n          }}>Clear All Expenses</button>\n        </div>\n      }\n      {\n        props.expenseList.length > 0 ? <table id=\"expenses-table\" className=\"table table-striped table-bordered table-hover\">\n          <tbody>\n            {\n              props.expenseList.map((expense) => (\n                <Expense\n                  key={expense.name}\n                  expenseName={expense.name}\n                  expenseCost={expense.cost}\n                  handleDeleteExpense={props.handleDeleteExpense}\n                  handleCompleteExpense={props.handleCompleteExpense}\n                />\n              ))\n            }\n          </tbody>\n        </table>\n          : <p id=\"empty-expense-list-msg\" className=\"text-center\">No expenses to show.</p>\n      }\n    </section>\n  );\n};\n\nexport default Expenses;","import React from 'react';\nimport './Footer.css';\n\nconst Footer = (props) => {\n  return (\n    <footer>\n      <p><a href=\"https://github.com/robotspacefish/Budget-App\">github</a></p>\n    </footer>\n  );\n};\n\nexport default Footer;","import React, { Component } from 'react';\nimport Header from '../components/Header/Header';\nimport Expenses from '../components/Expenses/Expenses';\nimport Footer from '../components/Footer/Footer';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleAddExpense = this.handleAddExpense.bind(this);\n    this.handleDeleteExpense = this.handleDeleteExpense.bind(this);\n    this.handleAddBudget = this.handleAddBudget.bind(this);\n    this.handleAdjustBudget = this.handleAdjustBudget.bind(this);\n    this.handleResetBudget = this.handleResetBudget.bind(this);\n    this.handleClearAllExpenses = this.handleClearAllExpenses.bind(this);\n    this.handleCompleteAllExpenses = this.handleCompleteAllExpenses.bind(this);\n    this.handleCompleteExpense = this.handleCompleteExpense.bind(this);\n    this.state = {\n      totalExpenses: 0,\n      expenseList: [],\n      totalBudget: undefined,\n    };\n  }\n  // lifecycle hooks ==========================================\n  componentDidMount() {\n    console.log('componentDidMount');\n    try {\n      const json = localStorage.getItem('expenseList');\n      const expenseList = JSON.parse(json);\n      const stringBudget = localStorage.getItem('totalBudget')\n      const totalBudget = parseInt(stringBudget);\n      const stringTotalExpenses = localStorage.getItem('totalExpenses');\n      const totalExpenses = parseInt(stringTotalExpenses);\n      if (expenseList) {\n        this.setState(() => ({ expenseList }));\n      }\n      if (totalBudget) {\n        this.setState(() => ({ totalBudget }));\n      }\n      if (totalExpenses) {\n        this.setState(() => ({ totalExpenses }));\n      }\n    } catch (e) {\n      // Do nothing\n      console.log(e);\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    console.log('componentDidUpdate');\n    if (prevState.expenseList.length !== this.state.expenseList.length) {\n      const json = JSON.stringify(this.state.expenseList);\n      localStorage.setItem('expenseList', json);\n    }\n    if (prevState.totalBudget !== this.state.totalBudget) {\n      localStorage.setItem('totalBudget', this.state.totalBudget);\n    }\n    if (prevState.totalExpenses !== this.state.totalExpenses) {\n      localStorage.setItem('totalExpenses', this.state.totalExpenses);\n    }\n  }\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n  // handleAddExpense ========================================\n  handleAddExpense(expense) {\n    console.log(expense)\n    const filteredList = this.state.expenseList.filter((exp) => expense.name === exp.name && expense.cost === exp.cost);\n\n    if (!expense.name || !expense.cost) {\n      return 'Expense name and cost needed.';\n    } else if (filteredList.length > 0) {\n      return 'This expense already exists.'\n    }\n    this.setState((prevState) => ({\n      expenseList: prevState.expenseList.concat(expense),\n      totalBudget: (parseInt(this.state.totalBudget) || 0) - parseInt(expense.cost),\n      totalExpenses: parseInt(this.state.totalExpenses) + parseInt(expense.cost)\n    }));\n\n  }\n  // handleClearAllExpenses =====================================\n  // puts money back in budget\n  handleClearAllExpenses() {\n    let addBack = 0;\n    this.state.expenseList.map(expense => {\n      addBack += parseInt(expense.cost);\n    })\n\n    localStorage.removeItem('expenseList');\n    this.setState(st => {\n      const budget = st.totalBudget === undefined ? 0 : st.totalBudget;\n      const newBudget = addBack + budget;\n        debugger\n      return {\n        totalExpenses: 0,\n        expenseList: [],\n        totalBudget : newBudget\n        }\n    });\n  }\n  // handleCompleteAllExpenses =====================================\n   // does not put money back in budget\n  handleCompleteAllExpenses() {\n    localStorage.removeItem('expenseList');\n    this.setState(() => ({ totalExpenses: 0, expenseList: [] }));\n  }\n  // handleDeleteExpense =====================================\n  // adds money back to budget\n  handleDeleteExpense(expenseToRemove) {\n    this.setState(prevState => ({\n      expenseList: prevState.expenseList.filter(expense => {\n        return expenseToRemove.name !== expense.name && expenseToRemove.cost !== expense.cost\n      }),\n      totalBudget: parseInt(prevState.totalBudget) + parseInt(expenseToRemove.cost),\n      totalExpenses: parseInt(prevState.totalExpenses) - parseInt(expenseToRemove.cost)\n    }));\n  }\n\n  // handleCompleteExpense =====================================\n  // doesn't add money back to budget\n  handleCompleteExpense(expenseToRemove) {\n    this.setState(prevState => ({\n      expenseList: prevState.expenseList.filter(expense => {\n        return expenseToRemove.name !== expense.name && expenseToRemove.cost !== expense.cost\n      }),\n      totalExpenses: parseInt(prevState.totalExpenses) - parseInt(expenseToRemove.cost)\n    }));\n  }\n\n  // handleResetBudget =======================================\n  handleResetBudget() {\n    console.log('resetting...');\n    localStorage.removeItem('totalBudget');\n    this.setState(() => ({ totalBudget: undefined }));\n  }\n  // handleAddBudget =========================================\n  handleAddBudget(budget) {\n    if (!budget) {\n      return 'Enter a budget of at least $1';\n    }\n    if (parseInt(budget) > 0) {\n      this.setState(() => ({ totalBudget: budget }));\n    }\n  }\n  // handleAddBudget =========================================\n  handleAdjustBudget(amount) {\n    if (!amount) {\n      return 'Enter the amount you wish to add or subtract from your current budget';\n    }\n    this.setState(() => {\n      return {\n        totalBudget: parseInt(this.state.totalBudget) + parseInt(amount)\n      }\n    });\n  }\n  // render ==================================================\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <Header\n          totalBudget={this.state.totalBudget}\n          totalExpenses={this.state.totalExpenses}\n          handleAddBudget={this.handleAddBudget}\n          handleAdjustBudget={this.handleAdjustBudget}\n          handleAddExpense={this.handleAddExpense}\n          handleResetBudget={this.handleResetBudget}\n        />\n        <Expenses\n          expenseList={this.state.expenseList}\n          handleDeleteExpense={this.handleDeleteExpense}\n          handleCompleteExpense={this.handleCompleteExpense}\n          handleEditExpenseModal={this.handleEditExpenseModal}\n          handleClearAllExpenses={this.handleClearAllExpenses}\n          handleCompleteAllExpenses={this.handleCompleteAllExpenses}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}